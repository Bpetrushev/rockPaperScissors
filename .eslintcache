[{"/Users/bpetrushev/Programming/reactApps/rock_paper_scissors/src/index.js":"1","/Users/bpetrushev/Programming/reactApps/rock_paper_scissors/src/App.js":"2","/Users/bpetrushev/Programming/reactApps/rock_paper_scissors/src/img/img.js":"3","/Users/bpetrushev/Programming/reactApps/rock_paper_scissors/src/Components/Header.js":"4","/Users/bpetrushev/Programming/reactApps/rock_paper_scissors/src/Components/GameGrid.js":"5","/Users/bpetrushev/Programming/reactApps/rock_paper_scissors/src/Components/utils.js":"6","/Users/bpetrushev/Programming/reactApps/rock_paper_scissors/src/Components/AlertComponent.js":"7","/Users/bpetrushev/Programming/reactApps/rock_paper_scissors/src/Components/BattleComponent.js":"8","/Users/bpetrushev/Programming/reactApps/rock_paper_scissors/src/Components/Points.js":"9","/Users/bpetrushev/Programming/reactApps/rock_paper_scissors/src/Components/Rules.js":"10"},{"size":220,"mtime":1605492944000,"results":"11","hashOfConfig":"12"},{"size":2783,"mtime":1610369761288,"results":"13","hashOfConfig":"12"},{"size":212,"mtime":1610212596872,"results":"14","hashOfConfig":"12"},{"size":146,"mtime":1610368696838,"results":"15","hashOfConfig":"12"},{"size":1899,"mtime":1610369501763,"results":"16","hashOfConfig":"12"},{"size":178,"mtime":1610369062131,"results":"17","hashOfConfig":"12"},{"size":1102,"mtime":1610369224962,"results":"18","hashOfConfig":"12"},{"size":3255,"mtime":1610369425092,"results":"19","hashOfConfig":"12"},{"size":593,"mtime":1610369692491,"results":"20","hashOfConfig":"12"},{"size":3076,"mtime":1610438712099,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1cppibr",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/Users/bpetrushev/Programming/reactApps/rock_paper_scissors/src/index.js",[],["44","45"],"/Users/bpetrushev/Programming/reactApps/rock_paper_scissors/src/App.js",[],"/Users/bpetrushev/Programming/reactApps/rock_paper_scissors/src/img/img.js",[],"/Users/bpetrushev/Programming/reactApps/rock_paper_scissors/src/Components/Header.js",[],"/Users/bpetrushev/Programming/reactApps/rock_paper_scissors/src/Components/GameGrid.js",[],"/Users/bpetrushev/Programming/reactApps/rock_paper_scissors/src/Components/utils.js",[],"/Users/bpetrushev/Programming/reactApps/rock_paper_scissors/src/Components/AlertComponent.js",[],"/Users/bpetrushev/Programming/reactApps/rock_paper_scissors/src/Components/BattleComponent.js",["46"],"import React, {useEffect, useRef, useState} from 'react';\nimport gameImg from '../img/img.js'; \nimport { TweenMax, TimelineLite } from \"gsap/all\";\nimport utils from './utils';\n\nconst BattleComponent = (props) => {\n\n    const elements ={\n    img1: (useRef(null)),\n    vl: useRef(null),\n    img2: useRef(null),\n    count: useRef(null),\n  }\n  const position = {\n    top: 0,\n    left: 0,\n  }\n  \n  const [alert, setAlert] = useState({show: false, text: ''});\n  if(alert.show){\n    props.alertComponentNewGame.props.text.show = alert.text;\n  }\n\n  const checkWhoWin = (img1, img2) => {\n    //handle win, lose or equal\n    if(img1 === img2) {\n      TweenMax.to(elements.img2, .3, {opacity: .5, delay: .5});\n      TweenMax.to(elements.img1, .3, {opacity: .5, delay: .5, onComplete: () => {\n        setAlert({show:true, text:'EQUAL'});\n      }});\n    }\n    if(utils.beats[img1] === img2){\n      TweenMax.to(elements.img2, .3, {opacity: .5, delay: .5});\n      TweenMax.to(elements.img1, .3, {scale:1.05, delay: .5, onComplete: () => {\n        props.pointsState(true);\n        setAlert({show:true, text:'YOU WIN!'});\n      }});\n    }else if(utils.beats[img2] === img1){\n      TweenMax.to(elements.img1, .3, {opacity: .5, delay: .5});\n      TweenMax.to(elements.img2, .3, {scale:1.05, delay: .5, onComplete: () => {\n        props.pointsState(false);\n        setAlert({show:true, text:'YOU LOSE!'});\n      }});\n    }\n  }\n\n  useEffect(() => {\n      position.top = props.positionElement.top - elements.img1.getBoundingClientRect().top;\n      position.left = props.positionElement.left - elements.img1.getBoundingClientRect().left;\n      \n      elements.img1.style.top = `${position.top}px`;\n      elements.img1.style.left = `${position.left}px`;\n\n      const valueFromCount = parseInt(elements.count.textContent);\n      let counter = valueFromCount;\n\n      //move img1 to right position\n      TweenMax.to(elements.img1, 1, {top:0, left: 0, opacity: 1, onComplete: () => {\n\n        //show vertical line\n        TweenMax.to(elements.vl, .5, {opacity: 1, onComplete: ()=>{\n\n          const tl = new TimelineLite({repeat: valueFromCount, repeatDelay: 0.1, onComplete: () => {\n            //show img2\n            TweenMax.to(elements.img2, .5, {opacity:1});\n            checkWhoWin(props.lastChoice, props.randomChoice);\n          }});\n\n          //animation for counter\n          tl.to(elements.count, .5, {scale:1, opacity:1});\n          tl.to(elements.count, .5, {scale:0.7, opacity:0, onComplete: () => {\n            counter--;\n            elements.count.textContent = counter;\n          }});\n\n        }});\n      }});\n  }, []);\n\n  return (\n    <div>\n      <div className='battleComponent'>\n        <img src={gameImg[props.lastChoice].default} ref={img => elements.img1 = img} className='firstElement' alt='test' style={{opacity: 0}} />\n        <div className='verticalLine' ref={div => elements.vl = div} style={{opacity: 0}} />\n        <img src={gameImg[props.randomChoice].default} ref={img => elements.img2 = img} className='lastElement' alt='test'style={{opacity: 0}} />\n        <div className='countStart' ref={div => elements.count = div} >3</div>\n      </div>\n      {alert.show ? props.alertComponentNewGame : null}\n    </div>\n  )\n}\n\nexport default BattleComponent;","/Users/bpetrushev/Programming/reactApps/rock_paper_scissors/src/Components/Points.js",[],"/Users/bpetrushev/Programming/reactApps/rock_paper_scissors/src/Components/Rules.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":78,"column":6,"nodeType":"53","endLine":78,"endColumn":8,"suggestions":"54"},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'checkWhoWin', 'elements.count', 'elements.img1', 'elements.img2', 'elements.vl', 'position', 'props.lastChoice', 'props.positionElement.left', 'props.positionElement.top', and 'props.randomChoice'. Either include them or remove the dependency array.","ArrayExpression",["57"],"no-global-assign","no-unsafe-negation",{"desc":"58","fix":"59"},"Update the dependencies array to be: [checkWhoWin, elements.count, elements.img1, elements.img2, elements.vl, position, props.lastChoice, props.positionElement.left, props.positionElement.top, props.randomChoice]",{"range":"60","text":"61"},[2606,2608],"[checkWhoWin, elements.count, elements.img1, elements.img2, elements.vl, position, props.lastChoice, props.positionElement.left, props.positionElement.top, props.randomChoice]"]